{"version":3,"sources":["pages/api/generate.js","pages/Responses.js","pages/Prompts.js","App.js","index.js"],"names":["getPromptResponses","promptInput","data","prompt","temperature","max_tokens","frequency_penalty","presence_penalty","fetch","method","headers","Authorization","process","body","JSON","stringify","Responses","props","className","id","response","Prompts","useState","setPromptInput","errorMessage","setErrorMessage","saved","localStorage","getItem","parse","responses","setResponse","onSubmit","event","a","preventDefault","ok","Error","json","res","choices","text","console","log","useEffect","setItem","Row","Col","lg","href","target","rel","type","onClick","e","value","placeholder","form","name","onChange","rows","cols","clear","map","Card","Body","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"oQAAaA,EAAqB,SAACC,GAEjC,IAAMC,EAAO,CACXC,OAAQF,EACRG,YAAa,GACbC,WAAY,GACZC,kBAAmB,EACnBC,iBAAkB,GAGpB,OAAOC,MAAM,+DAAgE,CAC3EC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYC,wDAE3BC,KAAMC,KAAKC,UAAUb,M,OCJVc,EAVG,SAACC,GAEjB,OACE,qCACE,sBAAKC,UAAU,UAAUC,GAAG,SAA5B,qBAA8CF,EAAMd,UACpD,gCAAK,sBAAMgB,GAAG,WAAT,uBAAL,IAA2CF,EAAMG,gB,wBCsGxCC,EAtGC,WAEd,MAAsCC,mBAAS,IAA/C,mBAAOrB,EAAP,KAAoBsB,EAApB,KACA,EAAwCD,mBAAS,IAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAAiCH,oBAAS,WAExC,IAAMI,EAAQC,aAAaC,QAAQ,YAEnC,OADsBd,KAAKe,MAAMH,IACT,MAJ1B,mBAAOI,EAAP,KAAkBC,EAAlB,KAOMC,EAAQ,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,yDACfD,EAAME,iBAEFlC,EAHW,uBAIbwB,EAAgB,0BAJH,mBAKN,GALM,uBASbA,EAAgB,IATH,SAWUzB,EAAmBC,GAX7B,WAWPmB,EAXO,QAaAgB,GAbA,uBAcL,IAAIC,MAAM,yBAdL,yBAgBKjB,EAASkB,OAhBd,QAgBPC,EAhBO,OAiBbR,EAAY,CAAC,CAACZ,GAAGoB,EAAIpB,GAAIhB,OAAOF,EAAamB,SAASmB,EAAIC,QAAQ,GAAGC,OAA1D,mBAAoEX,KAC/EP,EAAe,IAlBF,kDAsBbmB,QAAQC,IAAR,MAtBa,0DAAH,sDAoCd,OALAC,qBAAU,WACRjB,aAAakB,QAAQ,WAAY/B,KAAKC,UAAUe,MAC/C,CAACA,IAKA,eAACgB,EAAA,EAAD,CAAK5B,UAAU,YAAf,UACE,eAAC6B,EAAA,EAAD,CAAKC,GAAI,EAAG7B,GAAG,aAAaD,UAAU,aAAtC,UACE,iCACE,oBAAIA,UAAU,qBAAd,+BAEF,sBAAKA,UAAU,qBAAf,UACE,sBAAKC,GAAG,MAAR,2FACgF,mBAAG8B,KAAK,2BAA2BC,OAAO,SAASC,IAAI,aAAvD,oBADhF,qFAGA,uBAAMnB,SAAUA,EAAUb,GAAG,cAA7B,UACE,uBAAOD,UAAU,UAAUkC,KAAK,SAASC,QAAS,SAACC,GAAD,OAAO/B,EAAe+B,EAAEJ,OAAOK,QAAOA,MAAM,+BAC9F,uBAAOrC,UAAU,UAAUkC,KAAK,SAASC,QAAS,SAACC,GAAD,OAAO/B,EAAe+B,EAAEJ,OAAOK,QAAOA,MAAM,0CAC9F,0BACEC,YAAY,iBACZC,KAAK,cACLC,KAAK,SACLH,MAAOtD,EACP0D,SAAU,SAACL,GAAD,OAAO/B,EAAe+B,EAAEJ,OAAOK,QACzCK,KAAK,IACLC,KAAK,OAEP,uBAAO3C,UAAU,UAAUkC,KAAK,SAASG,MAAM,yBAEhD/B,GACC,8BACE,mBAAGN,UAAU,aAAb,SAA2BM,MAG/B,wBAAQ6B,QAAS,kBAvCzB1B,aAAamC,aACb/B,EAAY,KAsCqCb,UAAU,UAAUC,GAAG,QAAhE,mCAIJ,eAAC4B,EAAA,EAAD,CAAKC,GAAI,EAAG9B,UAAU,aAAtB,UACE,oBAAIA,UAAU,UAAUC,GAAG,aAA3B,4BACCW,EAAUiC,KAAI,SAAAxB,GACX,OACE,cAACyB,EAAA,EAAD,CAAmB9C,UAAU,cAA7B,SACE,cAAC8C,EAAA,EAAKC,KAAN,UACE,cAAC,EAAD,CACE9D,OAAQoC,EAAIpC,OACZiB,SAAUmB,EAAInB,cAJTmB,EAAIpB,c,MCnFhB+C,MANf,WACE,OACE,cAAC,EAAD,KCCSC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,S","file":"static/js/main.24d4bd55.chunk.js","sourcesContent":["export const getPromptResponses = (promptInput) => {\n\n  const data = {\n    prompt: promptInput,\n    temperature: 0.5,\n    max_tokens: 64,\n    frequency_penalty: 0.0,\n    presence_penalty: 0.0,\n   };\n\n  return fetch(\"https://api.openai.com/v1/engines/text-curie-001/completions\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${process.env.REACT_APP_SECRET_CODE}`,\n    },\n    body: JSON.stringify(data),\n   });;\n};\n\n","import React from \"react\"\n\nconst Responses = (props) => {\n\n  return (\n    <>\n      <div className=\"headers\" id=\"prompt\">Prompt: {props.prompt}</div>\n      <div><span id=\"response\">Response:</span> {props.response}</div>\n    </>\n  );\n}\n\nexport default Responses;\n","import { useState, useEffect } from \"react\";\nimport { getPromptResponses } from \"./api/generate\"\nimport Responses from \"./Responses\";\nimport Card from 'react-bootstrap/Card'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nconst Prompts = () => {\n\n  const [promptInput, setPromptInput] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState('')\n  const [responses, setResponse] = useState(() => {\n    // getting stored value\n    const saved = localStorage.getItem(\"response\");\n    const savedResponse = JSON.parse(saved);\n    return savedResponse || [];\n  });\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    if(!promptInput) {\n      setErrorMessage('Please enter a prompt!')\n      return false\n    }\n\n    try {\n      setErrorMessage('')\n\n      const response = await getPromptResponses(promptInput)\n\n      if(!response.ok) {\n        throw new Error('something went wrong!')\n      } \n      const res = await response.json()\n      setResponse([{id:res.id, prompt:promptInput, response:res.choices[0].text}, ...responses]);\n      setPromptInput(\"\");\n    }\n\n    catch(err) {\n      console.log(err)\n    }\n  }\n\n  const clearResponses = () => {\n    localStorage.clear();\n    setResponse([])\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"response\", JSON.stringify(responses));\n  }, [responses]);\n  \n\n  return (\n    \n      <Row className=\"row-style\">\n        <Col lg={5} id=\"summary-bg\" className=\"res-scroll\">\n          <header>\n            <h1 className=\"bg-opacity headers\">The Prompt Shop</h1>\n          </header>\n          <div className=\"bg-opacity sum-box\" >\n            <div id=\"sum\">\n              Welcome to The Prompt Shop! Enter a prompt and receive fun responses from the <a href=\"https://beta.openai.com/\" target=\"_blank\" rel=\"noreferrer\">OpenAI</a> API. Click on a preset example prompt below to see a response or try your own!\n            </div>\n            <form onSubmit={onSubmit} id=\"prompt-form\">\n              <input className=\"gen-btn\" type=\"submit\" onClick={(e) => setPromptInput(e.target.value)}value=\"How does a telescope work?\"></input> \n              <input className=\"gen-btn\" type=\"submit\" onClick={(e) => setPromptInput(e.target.value)}value=\"Write a poem about a dog wearing skis\"></input>\n              <textarea\n                placeholder=\"Enter a Prompt\"\n                form=\"prompt-form\"\n                name=\"prompt\"\n                value={promptInput}\n                onChange={(e) => setPromptInput(e.target.value)}\n                rows=\"4\" \n                cols=\"32\"\n              />\n              <input className=\"gen-btn\" type=\"submit\" value=\"Generate Response\" />\n            </form>\n            {errorMessage && (\n              <div>\n                <p className=\"error-text\">{errorMessage}</p>\n              </div>           \n            )}\n            <button onClick={() => clearResponses()} className=\"gen-btn\" id=\"clear\">Clear Responses</button>\n          </div>\n        </Col>\n\n        <Col lg={7} className=\"res-scroll\">\n          <h3 className=\"headers\" id=\"res-header\">Your Responses</h3>\n          {responses.map(res => {\n              return (\n                <Card key={res.id} className=\"prompt-card\">\n                  <Card.Body>      \n                    <Responses\n                      prompt={res.prompt}\n                      response={res.response}   \n                    />\n                  </Card.Body>\n                </Card>\n              )\n            })\n          }\n        </Col>\n      </Row>\n  \n  );\n}\n\nexport default Prompts;\n","import Prompts from './pages/Prompts';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Prompts/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}